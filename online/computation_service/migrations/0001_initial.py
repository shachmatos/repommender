# Generated by Django 2.0.5 on 2018-06-01 07:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(max_length=64)),
            ],
            options={
                'db_table': 'recommendations',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('size', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(max_length=255)),
                ('topics', models.TextField()),
                ('languages', models.TextField()),
                ('watchers_count', models.PositiveIntegerField()),
                ('forks_count', models.PositiveIntegerField()),
                ('open_issues', models.PositiveIntegerField()),
                ('subscribers_count', models.PositiveIntegerField()),
                ('updated_at', models.DateTimeField()),
                ('pushed_at', models.DateTimeField()),
                ('recommended', models.ManyToManyField(through='computation_service.Recommendation', to='computation_service.Repository')),
            ],
            options={
                'db_table': 'repositories',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('display_name', models.CharField(max_length=50)),
                ('short_description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'topics',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=50, unique=True)),
                ('avatar_url', models.URLField()),
                ('preferred_languages', models.TextField(null=True)),
                ('preferred_topics', models.TextField(null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserRepositories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contributions', models.PositiveIntegerField(default=0)),
                ('repo_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='computation_service.Repository')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='computation_service.User')),
            ],
            options={
                'db_table': 'user_repositories',
            },
        ),
        migrations.AddField(
            model_name='recommendation',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source', to='computation_service.Repository'),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target', to='computation_service.Repository'),
        ),
        migrations.AlterUniqueTogether(
            name='recommendation',
            unique_together={('source', 'target')},
        ),
    ]
